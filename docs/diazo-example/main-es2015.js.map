{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\nimport { DiazoGraph, DiazoNodeSet, DiazoContext } from 'diazo';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  constructor(\n    private matSnackbar : MatSnackBar\n  ) {\n\n  }\n  readonly = false;\n  active = false;\n  graphContext : DiazoContext;\n  dirty = false;\n\n  onSaveRequested() {\n    if (this.dirty) {\n      this.dirty = false;\n      this.matSnackbar.open(\n        \"Pretending to save your changes!\", \n        undefined, {\n          duration: 1000\n        }\n      );\n    } else {\n      this.matSnackbar.open(\n        \"No changes need to be saved!\", \n        undefined, \n        {\n          duration: 1000\n        }\n      );\n    }\n  }\n\n  onContextChanged(context : DiazoContext) {\n    this.graphContext = context;\n\n    console.log(`Received graph context from <dz-editor>:`);\n    console.dir(context);\n  }\n\n  onGraphChanged(graph : DiazoGraph) {\n    this.dirty = true;\n    this.matSnackbar.open('You have changed the graph!', undefined, {\n      duration: 1000\n    });\n  }\n\n  myGraph : DiazoGraph = {\n    edges: [], \n    nodes: [\n      {\n        id: 'one',\n        data: { \n          unit: 'my-input',\n          textProperty: 'hello'\n        },\n        label: 'My Input',\n        x: 50, \n        y: 50,\n        slots: [\n          { id: 'output', type: 'output', label: 'Output' }\n        ]\n      },\n      {\n        id: 'two',\n        data: { unit: 'my-output' },\n        label: 'My Output',\n        x: 300, \n        y: 100,\n        slots: [\n          { id: 'input', type: 'input', label: 'Input' }\n        ]\n      }\n    ]\n  };\n  \n  availableNodes : DiazoNodeSet[] = [\n    {\n        id: 'general',\n        label: 'General',\n        nodes: [\n            {\n                data: {\n                    unit: 'my-input',\n                    someProperty: 'abc'\n                },\n                label: 'My Input',\n                slots: [\n                    { id: 'output', type: 'output', label: 'Output' }\n                ],\n                properties: [\n                    {\n                        id: 'output-options',\n                        label: 'Output Options',\n                        properties: [\n                            {\n                                type: 'text',\n                                path: '$.data.textProperty',\n                                label: 'A Text Property',\n                                description: 'This is an example of a text property!'\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                data: {\n                    unit: 'my-output'\n                },\n                label: 'My Output',\n                slots: [\n                    { id: 'input', type: 'input', label: 'Input' }\n                ]\n            }\n        ]\n    }\n]\n}\n","\n<h1>Diazo Example</h1>\n\n<mat-checkbox [(ngModel)]=\"readonly\">Readonly</mat-checkbox>\n&nbsp;\n<mat-checkbox [(ngModel)]=\"active\">Active</mat-checkbox>\n\n<dz-editor \n    [graph]=\"myGraph\"\n    [readonly]=\"readonly\"\n    [active]=\"active\"\n    (graphChanged)=\"onGraphChanged($event)\"\n    (contextChanged)=\"onContextChanged($event)\"\n    (saveRequested)=\"onSaveRequested()\"\n    [availableNodes]=\"availableNodes\"></dz-editor>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { DiazoModule } from 'diazo';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\n\nimport { AppComponent } from './app.component';\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    DiazoModule,\n    MatCheckboxModule,\n    MatSnackBarModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}